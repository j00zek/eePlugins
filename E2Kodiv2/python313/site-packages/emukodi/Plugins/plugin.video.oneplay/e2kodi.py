#contains own functions to minimize modifications of the oryginal script
import e2kodi__init__ # aby zainicjowac sciezki i nie musiec zmieniac czegos w kodzie

import os, sys
from urllib.parse import parse_qsl

from xbmcE2 import *

import xbmc
import xbmcaddon
import xbmcgui
import xbmcplugin
import xbmcvfs

_id = int(sys.argv[1])
_addon = xbmcaddon.Addon()

params = dict(parse_qsl(sys.argv[2][1:]))

mode = params.get('mode', None)
if mode is None:
    print('brak parametrów uruchomieniowych :(')
elif mode=='logIn':
    pass
elif mode=='listE2B':
    from resources.lib.channels import Channels
    xbmcgui.Dialog().notification('OnePlay', 'Pobieram listę kanałów...', xbmcgui.NOTIFICATION_INFO)
    channels = Channels()
    channels_list = channels.get_channels_list('channel_number')
    xbmcgui.Dialog().notification('OnePlay', 'Generuję listę E2B dla %d kanałów...' % len(channels), xbmcgui.NOTIFICATION_INFO)

    dataE2 = '' #j00zek for E2 bouquets
    for number in sorted(channels_list.keys()):  
        chID = str(channels_list[number]['id'])
        chName = channels_list[number]['name']
        dataE2 += f'plugin.video.oneplay/main.py%3faction=iptsc_play_stream&id={chID}:{chName}\n'

    with open(os.path.join(working_dir, 'iptv.e2b'), "w") as file:
        file.write(dataE2)

elif mode=='logOut':
    os.system('rm -f /etc/E2Kodi/oneplay/session.txt')
