#contains own functions to minimize modifications of the oryginal script
import e2kodi__init__ # aby zainicjowac sciezki i nie musiec zmieniac czegos w kodzie

import json, os, sys
from urllib.parse import parse_qsl

from xbmcE2 import *

import xbmc
import xbmcaddon
import xbmcgui
import xbmcplugin
import xbmcvfs

from resources.lib.service import SettingsMonitor
from resources.lib.startup import EntryPoint

if __name__ == '__main__':
    params = dict(parse_qsl(sys.argv[2][1:]))
    addon = xbmcaddon.Addon()
    
    if params.get('mode', '') == 'LogIn':
        #if addon.getSetting('email') == '':
        #    xbmcgui.Dialog().notification('Amazon VOD\n', "Ustaw najpierw email użytkownika !!!", xbmcgui.NOTIFICATION_INFO, time = 20)
        #    exit()
        #elif addon.getSetting('password') == '':
        #    xbmcgui.Dialog().notification('Amazon VOD\n', "Ustaw najpierw hasło użytkownika !!!", xbmcgui.NOTIFICATION_INFO, time = 20)
        #    exit()
        #else:
        try:
            with open('/etc/E2Kodi/amazon-test/config/accounts.lst','r') as f:
                test = f.read().strip()
                test = json.loads(test)
                test = test[0]['cookie']['session-token'] + test[0]['token']['refresh']
                xbmcgui.Dialog().notification('Amazon VOD\n', "Poprawny plik logowania przez KODI", xbmcgui.NOTIFICATION_INFO, time = 20)
        except Exception:
            xbmcgui.Dialog().notification('Amazon VOD\n', "Zaloguj się najpierw w Kodi i skopiuj plik accounts.lst do katalogu /etc/E2Kodi/amazon-test/config/", xbmcgui.NOTIFICATION_INFO, time = 20)
        exit()
            
    elif params.get('mode', '') =='logOut':
        print('aqq')
        exit()

    #żeby wtyczka poprawnie rozpoznawała komendy
    if sys.argv[2].startswith('?:///'):
        sys.argv[2] = sys.argv[2][1:] 
    if sys.argv[2].startswith(':///'):
        sys.argv[0] = sys.argv[2][3:] 

    EntryPoint(sys.argv)
    SettingsMonitor().start()

#_id = int(sys.argv[1])
#_addon = xbmcaddon.Addon()

#params = dict(parse_qsl(sys.argv[2][1:]))

#mode = params.get('mode', None)
#if mode is None:
#    print('brak parametrów uruchomieniowych :(')
