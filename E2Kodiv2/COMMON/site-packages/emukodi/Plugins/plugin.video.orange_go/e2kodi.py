#contains own functions to minimize modifications of the oryginal script
import e2kodi__init__ # aby zainicjowac sciezki i nie musiec zmieniac czegos w kodzie

import os, sys
from urllib.parse import parse_qsl

from xbmcE2 import *

import xbmc
import xbmcaddon
import xbmcgui
import xbmcplugin
import xbmcvfs

_id = int(sys.argv[1])
_addon = xbmcaddon.Addon()

params = dict(parse_qsl(sys.argv[2][1:]))

mode = params.get('mode', None)
if mode is None:
    print('brak parametrów uruchomieniowych :(')
elif mode=='listE2B':
    from addon import channelList
    deviceCat='otg'
    xbmcgui.Dialog().notification('Orange Go', 'Pobieram listę kanałów...', xbmcgui.NOTIFICATION_INFO)
    chans=channelList()

    if chans == False:
        xbmcgui.Dialog().notification('Orange Go', 'Błąd pobierania listy kanałów :(', xbmcgui.NOTIFICATION_INFO)
    else:
        xbmcgui.Dialog().notification('Orange Go', f'Generuję listę E2B dla %d kanałów...' % len(chans), xbmcgui.NOTIFICATION_INFO)
        dataE2 = '' #j00zek for E2 bouquets
        for c in chans:
            isAllowed=c['playFeatures'][deviceCat]['isChannelAllowed']
            if isAllowed:
                chName=c['name']
                chID=c['channelExtId']
                dataE2 += f'plugin.video.orange_go/addon.py%3fmode=playSource&cid={chID}:{chName}\n'
        with open(os.path.join(working_dir, 'iptv.e2b'), "w") as file:
            file.write(dataE2)
