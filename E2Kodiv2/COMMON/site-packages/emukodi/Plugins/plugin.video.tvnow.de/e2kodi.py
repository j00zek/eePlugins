#contains own functions to minimize modifications of the oryginal script
import e2kodi__init__ # aby zainicjowac sciezki i nie musiec zmieniac czegos w kodzie

import os, sys
from urllib.parse import parse_qsl

from xbmcE2 import *

import xbmc
import xbmcaddon
import xbmcgui
import xbmcplugin
import xbmcvfs

from resources.lib.common import *
from resources.lib.navigation import Navigation

params = dict(parse_qsl(sys.argv[2][1:]))
nav = Navigation()

mode = params.get('action', None)

if mode is None:
    print('brak parametrów uruchomieniowych :(')
elif mode=='listM3U':
    KodiDirectoryItemsPath = os.path.join(working_dir, 'xbmcplugin_DirectoryItems')
    nav = Navigation()
    dataE2 = '' #j00zek for E2 bouquets
    for case_id in ['BROADCAST', 'FAST']:
        xbmcgui.Dialog().notification('DRTL+ - Webversion', 'Pobieram listę kanałów %s...' % case_id, xbmcgui.NOTIFICATION_INFO)
        cleanWorkingDir()
        nav.listStations(case_id)
        if os.path.exists(KodiDirectoryItemsPath):
           with open(KodiDirectoryItemsPath, 'r') as inFile:
                for line in inFile:
                    try:
                        lineDict = json.loads(line)
                        title = cleanKodiText(lineDict.get('label', '').split('[/B]')[0])
                        url =  r"http%3a//e2kodiPlayer/plugin.video.tvnow.de/default.py" + r"?%s" % lineDict.get('url', '').split('?')[1]
                        dataE2 += "%s:%s\n" % (url, title )
                    except Exception as e:
                        print(e)
    if dataE2 != '':
        xbmcgui.Dialog().notification('RTL+ - Webversion', 'Generuję listę E2B...', xbmcgui.NOTIFICATION_INFO)
        with open(os.path.join(working_dir, 'iptv.e2b'), "w") as file:
            file.write(dataE2)
