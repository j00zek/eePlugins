#contains own functions to minimize modifications of the oryginal script
import e2kodi__init__ # aby zainicjowac sciezki i nie musiec zmieniac czegos w kodzie

import os, sys
from urllib.parse import parse_qsl

from xbmcE2 import *

import xbmc
import xbmcaddon
import xbmcgui
import xbmcplugin
import xbmcvfs
import skylink
import utils
import exports

_id = int(sys.argv[1])
_addon = xbmcaddon.Addon()
_user_name = xbmcplugin.getSetting(_id, "username")
_password = xbmcplugin.getSetting(_id, "password")
_operator_choice = int(_addon.getSetting("operator_region"))
_profile = utils.dec_utf8(xbmcvfs.translatePath(_addon.getAddonInfo("profile")))
_pin_protected_content = _addon.getSetting("pin_protected_content")

params = dict(parse_qsl(sys.argv[2][1:]))

mode = params.get('mode', None)
if mode is None:
    print('brak parametrów uruchomieniowych :(')
elif mode=='logIn':
    if _user_name is None: _user_name = ''
    else:                  _user_name = _user_name.strip()
    if _password is None:  _password = ''
    else:                  _password = _password.strip()

    if _user_name == '' and _password == '':
        print('Nie podano nazwy użytkownika i hasła.')
    elif _user_name == '':
        print('Nie podano nazwy użytkownika.')
    elif _password == '':
        print('Nie podano hasła.')
    else:
        print('Podano użytkownika "%s...%s", hasło "%s...%s"' % (_user_name[1],_user_name[-1],_password[1],_password[-1]))
        if _operator_choice == 0: 
            print('Logowanie do DirectOne HU')
        if _operator_choice == 1:
            print('Logowanie do Skylink SK')
        if _operator_choice == 2:
            print('Logowanie do Skylink CZ')
        sl = skylink.Skylink(_user_name, _password, _profile, 'directone.hu(not used anymore)', _pin_protected_content)
        sl._login()
        entitlements = sl._getEntitlements()
        if os.path.exists('/etc/E2Kodi/directone/%s.session' % _user_name):
            print('Logowanie chyba udane ;)')
        else:
            print('Błąd logowania :(')

elif mode=='listM3U':
    sl = skylink.Skylink(_user_name, _password, _profile, 'directone.hu(not used anymore)', _pin_protected_content)
    xbmcgui.Dialog().notification('Direct One Live TV', 'Pobieram listę kanałów...', xbmcgui.NOTIFICATION_INFO)
    channels = sl.channels()
    xbmcgui.Dialog().notification('Direct One Live TV', 'Generuję listę E2B dla %d kanałów...' % len(channels), xbmcgui.NOTIFICATION_INFO)

    dataE2 = '' #j00zek for E2 bouquets
    for ch in channels:
        ch_id = ch["id"]
        title = ch["title"]
        pin_protected = ch.get("pinProtected", False)
        askpin = "True" if pin_protected else "False"
        dataE2 += f'plugin.video.directone/main.py%3fid={ch_id}&askpin={askpin}:{title}\n'
    with open(os.path.join(working_dir, 'iptv.e2b'), "w") as file:
        file.write(dataE2)

elif mode=='logOut':
    os.system('rm -f /etc/E2Kodi/directone/*.session')
