import os, json, sys
from emukodi import xbmcE2, xbmcgui

if 1: #mimic xbmc
    cItem = None
    def self_addDir(cItem, paramsDict): # xbmcplugin > DirectoryItems
        #paramesDict {'good_for_fav': True, 'category': category, 'title': title, 'url': url, 'display_template': dtype, 'desc': '' })
        data = {}
        data["label"] = paramsDict['title']

        display_template = paramsDict['display_template']
        data["url"] = paramsDict['url']
        if display_template == 'liveChannel':
            data["IsPlayable"] = True
            data["isFolder"] = False
        elif paramsDict['category'] in ['list_content', 'favorites_categories', 'live_categories', 'rubriques']:
            data["IsPlayable"] = False
            data["isFolder"] = True
        else:
            data["isFolder"] = False
            data["IsPlayable"] = False
        json_dump = json.dumps(data)
        xbmcE2.writeState('xbmcplugin', 'DirectoryItems', 'append', json_dump + '\n')

def addFolderItem(title, url):
    self_addDir(cItem, {'good_for_fav': True, 'category': 'list_content', 'display_template': 'nieistotne', 'title': title, 'url': url})

def addActionItem(title, url):
    self_addDir(cItem, {'good_for_fav': True, 'category': 'cfg_action', 'display_template': 'liveChannel', 'title': title, 'url': url})

def addTextItem(title):
    self_addDir(cItem, {'good_for_fav': True, 'category': 'list_content', 'display_template': 'nieistotne', 'title': title, 'url': ' '})

if __name__ == '__main__':
    mode = ''
    if len(sys.argv) < 2:
        print('Brak wymaganych parametrów :(')
    elif len(sys.argv) == 2: mode = sys.argv[1]
    else: mode = sys.argv[2]
    mode = mode.strip()
    if not os.path.exists('/usr/lib/enigma2/python/Plugins/Extensions/IPTVPlayer/plugin.pe2i'):
        addTextItem('Prywatny e2iplayer kolegi SSS niezainstalowany')
    if mode == 'showInfo':
        addTextItem('Pozwala na wyświetlenie materiałów video...')
        addTextItem('...z prywatnej wersji e2iplayer-a kolegi SSS...')
        addTextItem('...bezpośrednio z listy kanałów.')
        addTextItem(' ')
        addTextItem('Powinien działać na każdym sofcie z python3')
    elif mode == 'showWrapperInfo':
        addTextItem('Wrapper uruchamia e2iplayer trybie wsadowym')
        addTextItem('Żeby działał poprawnie, należy...')
        addTextItem('...odpowiedno skonfigurować e2iplayer, czyli...')
        addTextItem('- najlepiej wyłączyć automatyczne sprawdzanie aktualizacji,')
        addTextItem('- ustawić automatyczne wybieranie rozdzielczości,')
        addTextItem('Żadne okienka potwierdzające nie mogą być wyświetlane przez e2iplayer-a.')
        addTextItem('Bo w trybie wsadowym ich nie zobaczycie. ;)')
        addTextItem('Dodatkowo można włączyć na stałe serwer DRM')
    elif mode == 'showKeysInfo':
        addTextItem('Ponieważ wrapper uruchamia e2iplayer-a...')
        addTextItem('...to e2iplayer przejmuje sterowanie po wybraniu materiału na liście...')
        addTextItem('...do momentu wyjścia z odtwarzania materiału.')
        addTextItem('Wtedy następuje przekazanie sterowania ponownie do głównego wątku e2')
    elif mode == 'buildListInfo':
        addTextItem('składnia na liście kanałów:')
        addTextItem('<referencja>:http%3a//e2iBatchCMD/<nazwa hosta>%3a<sciezka w hoscie>:nazwa kanału na liście')
        addTextItem('Przykład:')
        addTextItem('#SERVICE 1:0:1:0:0:0:0:0:0:0:http%3a//e2iBatchCMD/canalplus%3aTelewizja na żywo -> Wszystkie kanały -> CANAL+ DOMO HD:CANAL+ DOMO HD')
    else:
        addFolderItem('Informacje o dodatku', 'showInfo')
        addFolderItem('Jak działa wrapper?', 'showWrapperInfo')
        addFolderItem('Dlaczego dziwnie się steruje?', 'showKeysInfo')
        addFolderItem('Jak zbudować wpis na liście kanałów?', 'buildListInfo')
        addFolderItem('Konfiguracja dodatku', 'konfig')
